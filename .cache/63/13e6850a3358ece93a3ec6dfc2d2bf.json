{"id":"node_modules/rxjs/operator/ignoreElements.js","dependencies":[{"name":"C:\\Users\\pooya\\Desktop\\poomap\\node_modules\\rxjs\\operator\\ignoreElements.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\pooya\\Desktop\\poomap\\package.json","includedInParent":true,"mtime":1594932269761},{"name":"C:\\Users\\pooya\\Desktop\\poomap\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1594932268869},{"name":"../operators/ignoreElements","loc":{"line":2,"column":31},"parent":"C:\\Users\\pooya\\Desktop\\poomap\\node_modules\\rxjs\\operator\\ignoreElements.js","resolved":"C:\\Users\\pooya\\Desktop\\poomap\\node_modules\\rxjs\\operators\\ignoreElements.js"}],"generated":{"js":"\"use strict\";\nvar ignoreElements_1 = require('../operators/ignoreElements');\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\n *\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nfunction ignoreElements() {\n    return ignoreElements_1.ignoreElements()(this);\n}\nexports.ignoreElements = ignoreElements;\n;\n"},"sourceMaps":{"js":{"version":3,"file":"ignoreElements.js","sourceRoot":"","sources":["../../src/operator/ignoreElements.ts"],"names":[],"mappings":";AACA,+BAA8C,6BAA6B,CAAC,CAAA;AAE5E;;;;;;;;;GASG;AACH;IACE,MAAM,CAAC,+BAAW,EAAE,CAAC,IAAI,CAAkB,CAAC;AAC9C,CAAC;AAFe,sBAAc,iBAE7B,CAAA;AAAA,CAAC","sourcesContent":["import { Observable } from '../Observable';\nimport { ignoreElements as higherOrder } from '../operators/ignoreElements';\n\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\n *\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nexport function ignoreElements<T>(this: Observable<T>): Observable<T> {\n  return higherOrder()(this) as Observable<T>;\n};\n"]}},"error":null,"hash":"f763f6779acee964340e4fd7d5dae174","cacheData":{"env":{}}}