{"id":"../../node_modules/faker/lib/fake.js","dependencies":[{"name":"C:\\Users\\pooya\\Desktop\\poomap\\package.json","includedInParent":true,"mtime":1594932269761},{"name":"C:\\Users\\pooya\\node_modules\\faker\\package.json","includedInParent":true,"mtime":1594823277670}],"generated":{"js":"/*\n  fake.js - generator method for combining faker methods based on string input\n\n*/\n\nfunction Fake (faker) {\n  \n  /**\n   * Generator method for combining faker methods based on string input\n   *\n   * __Example:__\n   *\n   * ```\n   * console.log(faker.fake('{{name.lastName}}, {{name.firstName}} {{name.suffix}}'));\n   * //outputs: \"Marks, Dean Sr.\"\n   * ```\n   *\n   * This will interpolate the format string with the value of methods\n   * [name.lastName]{@link faker.name.lastName}, [name.firstName]{@link faker.name.firstName},\n   * and [name.suffix]{@link faker.name.suffix}\n   *\n   * @method faker.fake\n   * @param {string} str\n   */\n  this.fake = function fake (str) {\n    // setup default response as empty string\n    var res = '';\n\n    // if incoming str parameter is not provided, return error message\n    if (typeof str !== 'string' || str.length === 0) {\n      res = 'string parameter is required!';\n      return res;\n    }\n\n    // find first matching {{ and }}\n    var start = str.search('{{');\n    var end = str.search('}}');\n\n    // if no {{ and }} is found, we are done\n    if (start === -1 && end === -1) {\n      return str;\n    }\n\n    // console.log('attempting to parse', str);\n\n    // extract method name from between the {{ }} that we found\n    // for example: {{name.firstName}}\n    var token = str.substr(start + 2,  end - start - 2);\n    var method = token.replace('}}', '').replace('{{', '');\n\n    // console.log('method', method)\n\n    // extract method parameters\n    var regExp = /\\(([^)]+)\\)/;\n    var matches = regExp.exec(method);\n    var parameters = '';\n    if (matches) {\n      method = method.replace(regExp, '');\n      parameters = matches[1];\n    }\n\n    // split the method into module and function\n    var parts = method.split('.');\n\n    if (typeof faker[parts[0]] === \"undefined\") {\n      throw new Error('Invalid module: ' + parts[0]);\n    }\n\n    if (typeof faker[parts[0]][parts[1]] === \"undefined\") {\n      throw new Error('Invalid method: ' + parts[0] + \".\" + parts[1]);\n    }\n\n    // assign the function from the module.function namespace\n    var fn = faker[parts[0]][parts[1]];\n\n    // If parameters are populated here, they are always going to be of string type\n    // since we might actually be dealing with an object or array,\n    // we always attempt to the parse the incoming parameters into JSON\n    var params;\n    // Note: we experience a small performance hit here due to JSON.parse try / catch\n    // If anyone actually needs to optimize this specific code path, please open a support issue on github\n    try {\n      params = JSON.parse(parameters)\n    } catch (err) {\n      // since JSON.parse threw an error, assume parameters was actually a string\n      params = parameters;\n    }\n\n    var result;\n    if (typeof params === \"string\" && params.length === 0) {\n      result = fn.call(this);\n    } else {\n      result = fn.call(this, params);\n    }\n\n    // replace the found tag with the returned fake value\n    res = str.replace('{{' + token + '}}', result);\n\n    // return the response recursively until we are done finding all tags\n    return fake(res);    \n  }\n  \n  return this;\n  \n  \n}\n\nmodule['exports'] = Fake;"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/faker/lib/fake.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/faker/lib/fake.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}}],"sources":{"../../node_modules/faker/lib/fake.js":"/*\n  fake.js - generator method for combining faker methods based on string input\n\n*/\n\nfunction Fake (faker) {\n  \n  /**\n   * Generator method for combining faker methods based on string input\n   *\n   * __Example:__\n   *\n   * ```\n   * console.log(faker.fake('{{name.lastName}}, {{name.firstName}} {{name.suffix}}'));\n   * //outputs: \"Marks, Dean Sr.\"\n   * ```\n   *\n   * This will interpolate the format string with the value of methods\n   * [name.lastName]{@link faker.name.lastName}, [name.firstName]{@link faker.name.firstName},\n   * and [name.suffix]{@link faker.name.suffix}\n   *\n   * @method faker.fake\n   * @param {string} str\n   */\n  this.fake = function fake (str) {\n    // setup default response as empty string\n    var res = '';\n\n    // if incoming str parameter is not provided, return error message\n    if (typeof str !== 'string' || str.length === 0) {\n      res = 'string parameter is required!';\n      return res;\n    }\n\n    // find first matching {{ and }}\n    var start = str.search('{{');\n    var end = str.search('}}');\n\n    // if no {{ and }} is found, we are done\n    if (start === -1 && end === -1) {\n      return str;\n    }\n\n    // console.log('attempting to parse', str);\n\n    // extract method name from between the {{ }} that we found\n    // for example: {{name.firstName}}\n    var token = str.substr(start + 2,  end - start - 2);\n    var method = token.replace('}}', '').replace('{{', '');\n\n    // console.log('method', method)\n\n    // extract method parameters\n    var regExp = /\\(([^)]+)\\)/;\n    var matches = regExp.exec(method);\n    var parameters = '';\n    if (matches) {\n      method = method.replace(regExp, '');\n      parameters = matches[1];\n    }\n\n    // split the method into module and function\n    var parts = method.split('.');\n\n    if (typeof faker[parts[0]] === \"undefined\") {\n      throw new Error('Invalid module: ' + parts[0]);\n    }\n\n    if (typeof faker[parts[0]][parts[1]] === \"undefined\") {\n      throw new Error('Invalid method: ' + parts[0] + \".\" + parts[1]);\n    }\n\n    // assign the function from the module.function namespace\n    var fn = faker[parts[0]][parts[1]];\n\n    // If parameters are populated here, they are always going to be of string type\n    // since we might actually be dealing with an object or array,\n    // we always attempt to the parse the incoming parameters into JSON\n    var params;\n    // Note: we experience a small performance hit here due to JSON.parse try / catch\n    // If anyone actually needs to optimize this specific code path, please open a support issue on github\n    try {\n      params = JSON.parse(parameters)\n    } catch (err) {\n      // since JSON.parse threw an error, assume parameters was actually a string\n      params = parameters;\n    }\n\n    var result;\n    if (typeof params === \"string\" && params.length === 0) {\n      result = fn.call(this);\n    } else {\n      result = fn.call(this, params);\n    }\n\n    // replace the found tag with the returned fake value\n    res = str.replace('{{' + token + '}}', result);\n\n    // return the response recursively until we are done finding all tags\n    return fake(res);    \n  }\n  \n  return this;\n  \n  \n}\n\nmodule['exports'] = Fake;"},"lineCount":108}},"error":null,"hash":"21fa8fbe21deec7bebde6c9246336665","cacheData":{"env":{}}}