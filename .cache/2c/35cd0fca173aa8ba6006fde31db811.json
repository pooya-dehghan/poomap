{"id":"node_modules/safe-regex/index.js","dependencies":[{"name":"C:\\Users\\pooya\\Desktop\\poomap\\package.json","includedInParent":true,"mtime":1594932269761},{"name":"C:\\Users\\pooya\\Desktop\\poomap\\node_modules\\safe-regex\\package.json","includedInParent":true,"mtime":1594932268886},{"name":"ret","loc":{"line":1,"column":20},"parent":"C:\\Users\\pooya\\Desktop\\poomap\\node_modules\\safe-regex\\index.js","resolved":"C:\\Users\\pooya\\Desktop\\poomap\\node_modules\\ret\\lib\\index.js"}],"generated":{"js":"var parse = require('ret');\nvar types = parse.types;\n\nmodule.exports = function (re, opts) {\n    if (!opts) opts = {};\n    var replimit = opts.limit === undefined ? 25 : opts.limit;\n    \n    if (isRegExp(re)) re = re.source;\n    else if (typeof re !== 'string') re = String(re);\n    \n    try { re = parse(re) }\n    catch (err) { return false }\n    \n    var reps = 0;\n    return (function walk (node, starHeight) {\n        if (node.type === types.REPETITION) {\n            starHeight ++;\n            reps ++;\n            if (starHeight > 1) return false;\n            if (reps > replimit) return false;\n        }\n        \n        if (node.options) {\n            for (var i = 0, len = node.options.length; i < len; i++) {\n                var ok = walk({ stack: node.options[i] }, starHeight);\n                if (!ok) return false;\n            }\n        }\n        var stack = node.stack || (node.value && node.value.stack);\n        if (!stack) return true;\n        \n        for (var i = 0; i < stack.length; i++) {\n            var ok = walk(stack[i], starHeight);\n            if (!ok) return false;\n        }\n        \n        return true;\n    })(re, 0);\n};\n\nfunction isRegExp (x) {\n    return {}.toString.call(x) === '[object RegExp]';\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/safe-regex/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/safe-regex/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}}],"sources":{"node_modules/safe-regex/index.js":"var parse = require('ret');\nvar types = parse.types;\n\nmodule.exports = function (re, opts) {\n    if (!opts) opts = {};\n    var replimit = opts.limit === undefined ? 25 : opts.limit;\n    \n    if (isRegExp(re)) re = re.source;\n    else if (typeof re !== 'string') re = String(re);\n    \n    try { re = parse(re) }\n    catch (err) { return false }\n    \n    var reps = 0;\n    return (function walk (node, starHeight) {\n        if (node.type === types.REPETITION) {\n            starHeight ++;\n            reps ++;\n            if (starHeight > 1) return false;\n            if (reps > replimit) return false;\n        }\n        \n        if (node.options) {\n            for (var i = 0, len = node.options.length; i < len; i++) {\n                var ok = walk({ stack: node.options[i] }, starHeight);\n                if (!ok) return false;\n            }\n        }\n        var stack = node.stack || (node.value && node.value.stack);\n        if (!stack) return true;\n        \n        for (var i = 0; i < stack.length; i++) {\n            var ok = walk(stack[i], starHeight);\n            if (!ok) return false;\n        }\n        \n        return true;\n    })(re, 0);\n};\n\nfunction isRegExp (x) {\n    return {}.toString.call(x) === '[object RegExp]';\n}\n"},"lineCount":44}},"error":null,"hash":"6c5201276298e29bef11ce1293c0656a","cacheData":{"env":{}}}