{"id":"node_modules/minimatch/minimatch.js","dependencies":[{"name":"C:\\Users\\pooya\\Desktop\\poomap\\package.json","includedInParent":true,"mtime":1594932269761},{"name":"C:\\Users\\pooya\\Desktop\\poomap\\node_modules\\minimatch\\package.json","includedInParent":true,"mtime":1594932269058},{"name":"path","optional":true,"loc":{"line":6,"column":17},"parent":"C:\\Users\\pooya\\Desktop\\poomap\\node_modules\\minimatch\\minimatch.js","resolved":"C:\\Users\\pooya\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\path-browserify\\index.js"},{"name":"brace-expansion","loc":{"line":10,"column":21},"parent":"C:\\Users\\pooya\\Desktop\\poomap\\node_modules\\minimatch\\minimatch.js","resolved":"C:\\Users\\pooya\\Desktop\\poomap\\node_modules\\brace-expansion\\index.js"}],"generated":{"js":"module.exports = minimatch\nminimatch.Minimatch = Minimatch\n\nvar path = { sep: '/' }\ntry {\n  path = require('path')\n} catch (er) {}\n\nvar GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\nvar expand = require('brace-expansion')\n\nvar plTypes = {\n  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},\n  '?': { open: '(?:', close: ')?' },\n  '+': { open: '(?:', close: ')+' },\n  '*': { open: '(?:', close: ')*' },\n  '@': { open: '(?:', close: ')' }\n}\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nvar qmark = '[^/]'\n\n// * => any number of characters\nvar star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nvar twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nvar twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?'\n\n// characters that need to be escaped in RegExp.\nvar reSpecials = charSet('().*{}+?[]^$\\\\!')\n\n// \"abc\" -> { a:true, b:true, c:true }\nfunction charSet (s) {\n  return s.split('').reduce(function (set, c) {\n    set[c] = true\n    return set\n  }, {})\n}\n\n// normalizes slashes.\nvar slashSplit = /\\/+/\n\nminimatch.filter = filter\nfunction filter (pattern, options) {\n  options = options || {}\n  return function (p, i, list) {\n    return minimatch(p, pattern, options)\n  }\n}\n\nfunction ext (a, b) {\n  a = a || {}\n  b = b || {}\n  var t = {}\n  Object.keys(b).forEach(function (k) {\n    t[k] = b[k]\n  })\n  Object.keys(a).forEach(function (k) {\n    t[k] = a[k]\n  })\n  return t\n}\n\nminimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return minimatch\n\n  var orig = minimatch\n\n  var m = function minimatch (p, pattern, options) {\n    return orig.minimatch(p, pattern, ext(def, options))\n  }\n\n  m.Minimatch = function Minimatch (pattern, options) {\n    return new orig.Minimatch(pattern, ext(def, options))\n  }\n\n  return m\n}\n\nMinimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return Minimatch\n  return minimatch.defaults(def).Minimatch\n}\n\nfunction minimatch (p, pattern, options) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  // \"\" only matches \"\"\n  if (pattern.trim() === '') return p === ''\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nfunction Minimatch (pattern, options) {\n  if (!(this instanceof Minimatch)) {\n    return new Minimatch(pattern, options)\n  }\n\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n  pattern = pattern.trim()\n\n  // windows support: need to use /, not \\\n  if (path.sep !== '/') {\n    pattern = pattern.split(path.sep).join('/')\n  }\n\n  this.options = options\n  this.set = []\n  this.pattern = pattern\n  this.regexp = null\n  this.negate = false\n  this.comment = false\n  this.empty = false\n\n  // make the set of regexps etc.\n  this.make()\n}\n\nMinimatch.prototype.debug = function () {}\n\nMinimatch.prototype.make = make\nfunction make () {\n  // don't do it more than once.\n  if (this._made) return\n\n  var pattern = this.pattern\n  var options = this.options\n\n  // empty patterns and comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    this.comment = true\n    return\n  }\n  if (!pattern) {\n    this.empty = true\n    return\n  }\n\n  // step 1: figure out negation, etc.\n  this.parseNegate()\n\n  // step 2: expand braces\n  var set = this.globSet = this.braceExpand()\n\n  if (options.debug) this.debug = console.error\n\n  this.debug(this.pattern, set)\n\n  // step 3: now we have a set, so turn each one into a series of path-portion\n  // matching patterns.\n  // These will be regexps, except in the case of \"**\", which is\n  // set to the GLOBSTAR object for globstar behavior,\n  // and will not contain any / characters\n  set = this.globParts = set.map(function (s) {\n    return s.split(slashSplit)\n  })\n\n  this.debug(this.pattern, set)\n\n  // glob --> regexps\n  set = set.map(function (s, si, set) {\n    return s.map(this.parse, this)\n  }, this)\n\n  this.debug(this.pattern, set)\n\n  // filter out everything that didn't compile properly.\n  set = set.filter(function (s) {\n    return s.indexOf(false) === -1\n  })\n\n  this.debug(this.pattern, set)\n\n  this.set = set\n}\n\nMinimatch.prototype.parseNegate = parseNegate\nfunction parseNegate () {\n  var pattern = this.pattern\n  var negate = false\n  var options = this.options\n  var negateOffset = 0\n\n  if (options.nonegate) return\n\n  for (var i = 0, l = pattern.length\n    ; i < l && pattern.charAt(i) === '!'\n    ; i++) {\n    negate = !negate\n    negateOffset++\n  }\n\n  if (negateOffset) this.pattern = pattern.substr(negateOffset)\n  this.negate = negate\n}\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch.braceExpand = function (pattern, options) {\n  return braceExpand(pattern, options)\n}\n\nMinimatch.prototype.braceExpand = braceExpand\n\nfunction braceExpand (pattern, options) {\n  if (!options) {\n    if (this instanceof Minimatch) {\n      options = this.options\n    } else {\n      options = {}\n    }\n  }\n\n  pattern = typeof pattern === 'undefined'\n    ? this.pattern : pattern\n\n  if (typeof pattern === 'undefined') {\n    throw new TypeError('undefined pattern')\n  }\n\n  if (options.nobrace ||\n    !pattern.match(/\\{.*\\}/)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nMinimatch.prototype.parse = parse\nvar SUBPARSE = {}\nfunction parse (pattern, isSub) {\n  if (pattern.length > 1024 * 64) {\n    throw new TypeError('pattern is too long')\n  }\n\n  var options = this.options\n\n  // shortcuts\n  if (!options.noglobstar && pattern === '**') return GLOBSTAR\n  if (pattern === '') return ''\n\n  var re = ''\n  var hasMagic = !!options.nocase\n  var escaping = false\n  // ? => one single character\n  var patternListStack = []\n  var negativeLists = []\n  var stateChar\n  var inClass = false\n  var reClassStart = -1\n  var classStart = -1\n  // . and .. never match anything that doesn't start with .,\n  // even when options.dot is set.\n  var patternStart = pattern.charAt(0) === '.' ? '' // anything\n  // not (start or / followed by . or .. followed by / or end)\n  : options.dot ? '(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))'\n  : '(?!\\\\.)'\n  var self = this\n\n  function clearStateChar () {\n    if (stateChar) {\n      // we had some state-tracking character\n      // that wasn't consumed by this pass.\n      switch (stateChar) {\n        case '*':\n          re += star\n          hasMagic = true\n        break\n        case '?':\n          re += qmark\n          hasMagic = true\n        break\n        default:\n          re += '\\\\' + stateChar\n        break\n      }\n      self.debug('clearStateChar %j %j', stateChar, re)\n      stateChar = false\n    }\n  }\n\n  for (var i = 0, len = pattern.length, c\n    ; (i < len) && (c = pattern.charAt(i))\n    ; i++) {\n    this.debug('%s\\t%s %s %j', pattern, i, re, c)\n\n    // skip over any that are escaped.\n    if (escaping && reSpecials[c]) {\n      re += '\\\\' + c\n      escaping = false\n      continue\n    }\n\n    switch (c) {\n      case '/':\n        // completely not allowed, even escaped.\n        // Should already be path-split by now.\n        return false\n\n      case '\\\\':\n        clearStateChar()\n        escaping = true\n      continue\n\n      // the various stateChar values\n      // for the \"extglob\" stuff.\n      case '?':\n      case '*':\n      case '+':\n      case '@':\n      case '!':\n        this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c)\n\n        // all of those are literals inside a class, except that\n        // the glob [!a] means [^a] in regexp\n        if (inClass) {\n          this.debug('  in class')\n          if (c === '!' && i === classStart + 1) c = '^'\n          re += c\n          continue\n        }\n\n        // if we already have a stateChar, then it means\n        // that there was something like ** or +? in there.\n        // Handle the stateChar, then proceed with this one.\n        self.debug('call clearStateChar %j', stateChar)\n        clearStateChar()\n        stateChar = c\n        // if extglob is disabled, then +(asdf|foo) isn't a thing.\n        // just clear the statechar *now*, rather than even diving into\n        // the patternList stuff.\n        if (options.noext) clearStateChar()\n      continue\n\n      case '(':\n        if (inClass) {\n          re += '('\n          continue\n        }\n\n        if (!stateChar) {\n          re += '\\\\('\n          continue\n        }\n\n        patternListStack.push({\n          type: stateChar,\n          start: i - 1,\n          reStart: re.length,\n          open: plTypes[stateChar].open,\n          close: plTypes[stateChar].close\n        })\n        // negation is (?:(?!js)[^/]*)\n        re += stateChar === '!' ? '(?:(?!(?:' : '(?:'\n        this.debug('plType %j %j', stateChar, re)\n        stateChar = false\n      continue\n\n      case ')':\n        if (inClass || !patternListStack.length) {\n          re += '\\\\)'\n          continue\n        }\n\n        clearStateChar()\n        hasMagic = true\n        var pl = patternListStack.pop()\n        // negation is (?:(?!js)[^/]*)\n        // The others are (?:<pattern>)<type>\n        re += pl.close\n        if (pl.type === '!') {\n          negativeLists.push(pl)\n        }\n        pl.reEnd = re.length\n      continue\n\n      case '|':\n        if (inClass || !patternListStack.length || escaping) {\n          re += '\\\\|'\n          escaping = false\n          continue\n        }\n\n        clearStateChar()\n        re += '|'\n      continue\n\n      // these are mostly the same in regexp and glob\n      case '[':\n        // swallow any state-tracking char before the [\n        clearStateChar()\n\n        if (inClass) {\n          re += '\\\\' + c\n          continue\n        }\n\n        inClass = true\n        classStart = i\n        reClassStart = re.length\n        re += c\n      continue\n\n      case ']':\n        //  a right bracket shall lose its special\n        //  meaning and represent itself in\n        //  a bracket expression if it occurs\n        //  first in the list.  -- POSIX.2 2.8.3.2\n        if (i === classStart + 1 || !inClass) {\n          re += '\\\\' + c\n          escaping = false\n          continue\n        }\n\n        // handle the case where we left a class open.\n        // \"[z-a]\" is valid, equivalent to \"\\[z-a\\]\"\n        if (inClass) {\n          // split where the last [ was, make sure we don't have\n          // an invalid re. if so, re-walk the contents of the\n          // would-be class to re-translate any characters that\n          // were passed through as-is\n          // TODO: It would probably be faster to determine this\n          // without a try/catch and a new RegExp, but it's tricky\n          // to do safely.  For now, this is safe and works.\n          var cs = pattern.substring(classStart + 1, i)\n          try {\n            RegExp('[' + cs + ']')\n          } catch (er) {\n            // not a valid class!\n            var sp = this.parse(cs, SUBPARSE)\n            re = re.substr(0, reClassStart) + '\\\\[' + sp[0] + '\\\\]'\n            hasMagic = hasMagic || sp[1]\n            inClass = false\n            continue\n          }\n        }\n\n        // finish up the class.\n        hasMagic = true\n        inClass = false\n        re += c\n      continue\n\n      default:\n        // swallow any state char that wasn't consumed\n        clearStateChar()\n\n        if (escaping) {\n          // no need\n          escaping = false\n        } else if (reSpecials[c]\n          && !(c === '^' && inClass)) {\n          re += '\\\\'\n        }\n\n        re += c\n\n    } // switch\n  } // for\n\n  // handle the case where we left a class open.\n  // \"[abc\" is valid, equivalent to \"\\[abc\"\n  if (inClass) {\n    // split where the last [ was, and escape it\n    // this is a huge pita.  We now have to re-walk\n    // the contents of the would-be class to re-translate\n    // any characters that were passed through as-is\n    cs = pattern.substr(classStart + 1)\n    sp = this.parse(cs, SUBPARSE)\n    re = re.substr(0, reClassStart) + '\\\\[' + sp[0]\n    hasMagic = hasMagic || sp[1]\n  }\n\n  // handle the case where we had a +( thing at the *end*\n  // of the pattern.\n  // each pattern list stack adds 3 chars, and we need to go through\n  // and escape any | chars that were passed through as-is for the regexp.\n  // Go through and escape them, taking care not to double-escape any\n  // | chars that were already escaped.\n  for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\n    var tail = re.slice(pl.reStart + pl.open.length)\n    this.debug('setting tail', re, pl)\n    // maybe some even number of \\, then maybe 1 \\, followed by a |\n    tail = tail.replace(/((?:\\\\{2}){0,64})(\\\\?)\\|/g, function (_, $1, $2) {\n      if (!$2) {\n        // the | isn't already escaped, so escape it.\n        $2 = '\\\\'\n      }\n\n      // need to escape all those slashes *again*, without escaping the\n      // one that we need for escaping the | character.  As it works out,\n      // escaping an even number of slashes can be done by simply repeating\n      // it exactly after itself.  That's why this trick works.\n      //\n      // I am sorry that you have to see this.\n      return $1 + $1 + $2 + '|'\n    })\n\n    this.debug('tail=%j\\n   %s', tail, tail, pl, re)\n    var t = pl.type === '*' ? star\n      : pl.type === '?' ? qmark\n      : '\\\\' + pl.type\n\n    hasMagic = true\n    re = re.slice(0, pl.reStart) + t + '\\\\(' + tail\n  }\n\n  // handle trailing things that only matter at the very end.\n  clearStateChar()\n  if (escaping) {\n    // trailing \\\\\n    re += '\\\\\\\\'\n  }\n\n  // only need to apply the nodot start if the re starts with\n  // something that could conceivably capture a dot\n  var addPatternStart = false\n  switch (re.charAt(0)) {\n    case '.':\n    case '[':\n    case '(': addPatternStart = true\n  }\n\n  // Hack to work around lack of negative lookbehind in JS\n  // A pattern like: *.!(x).!(y|z) needs to ensure that a name\n  // like 'a.xyz.yz' doesn't match.  So, the first negative\n  // lookahead, has to look ALL the way ahead, to the end of\n  // the pattern.\n  for (var n = negativeLists.length - 1; n > -1; n--) {\n    var nl = negativeLists[n]\n\n    var nlBefore = re.slice(0, nl.reStart)\n    var nlFirst = re.slice(nl.reStart, nl.reEnd - 8)\n    var nlLast = re.slice(nl.reEnd - 8, nl.reEnd)\n    var nlAfter = re.slice(nl.reEnd)\n\n    nlLast += nlAfter\n\n    // Handle nested stuff like *(*.js|!(*.json)), where open parens\n    // mean that we should *not* include the ) in the bit that is considered\n    // \"after\" the negated section.\n    var openParensBefore = nlBefore.split('(').length - 1\n    var cleanAfter = nlAfter\n    for (i = 0; i < openParensBefore; i++) {\n      cleanAfter = cleanAfter.replace(/\\)[+*?]?/, '')\n    }\n    nlAfter = cleanAfter\n\n    var dollar = ''\n    if (nlAfter === '' && isSub !== SUBPARSE) {\n      dollar = '$'\n    }\n    var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast\n    re = newRe\n  }\n\n  // if the re is not \"\" at this point, then we need to make sure\n  // it doesn't match against an empty path part.\n  // Otherwise a/* will match a/, which it should not.\n  if (re !== '' && hasMagic) {\n    re = '(?=.)' + re\n  }\n\n  if (addPatternStart) {\n    re = patternStart + re\n  }\n\n  // parsing just a piece of a larger pattern.\n  if (isSub === SUBPARSE) {\n    return [re, hasMagic]\n  }\n\n  // skip the regexp for non-magical patterns\n  // unescape anything in it, though, so that it'll be\n  // an exact match against a file etc.\n  if (!hasMagic) {\n    return globUnescape(pattern)\n  }\n\n  var flags = options.nocase ? 'i' : ''\n  try {\n    var regExp = new RegExp('^' + re + '$', flags)\n  } catch (er) {\n    // If it was an invalid regular expression, then it can't match\n    // anything.  This trick looks for a character after the end of\n    // the string, which is of course impossible, except in multi-line\n    // mode, but it's not a /m regex.\n    return new RegExp('$.')\n  }\n\n  regExp._glob = pattern\n  regExp._src = re\n\n  return regExp\n}\n\nminimatch.makeRe = function (pattern, options) {\n  return new Minimatch(pattern, options || {}).makeRe()\n}\n\nMinimatch.prototype.makeRe = makeRe\nfunction makeRe () {\n  if (this.regexp || this.regexp === false) return this.regexp\n\n  // at this point, this.set is a 2d array of partial\n  // pattern strings, or \"**\".\n  //\n  // It's better to use .match().  This function shouldn't\n  // be used, really, but it's pretty convenient sometimes,\n  // when you just want to work with a regex.\n  var set = this.set\n\n  if (!set.length) {\n    this.regexp = false\n    return this.regexp\n  }\n  var options = this.options\n\n  var twoStar = options.noglobstar ? star\n    : options.dot ? twoStarDot\n    : twoStarNoDot\n  var flags = options.nocase ? 'i' : ''\n\n  var re = set.map(function (pattern) {\n    return pattern.map(function (p) {\n      return (p === GLOBSTAR) ? twoStar\n      : (typeof p === 'string') ? regExpEscape(p)\n      : p._src\n    }).join('\\\\\\/')\n  }).join('|')\n\n  // must match entire pattern\n  // ending in a * or ** will make it less strict.\n  re = '^(?:' + re + ')$'\n\n  // can match anything, as long as it's not this.\n  if (this.negate) re = '^(?!' + re + ').*$'\n\n  try {\n    this.regexp = new RegExp(re, flags)\n  } catch (ex) {\n    this.regexp = false\n  }\n  return this.regexp\n}\n\nminimatch.match = function (list, pattern, options) {\n  options = options || {}\n  var mm = new Minimatch(pattern, options)\n  list = list.filter(function (f) {\n    return mm.match(f)\n  })\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\n\nMinimatch.prototype.match = match\nfunction match (f, partial) {\n  this.debug('match', f, this.pattern)\n  // short-circuit in the case of busted things.\n  // comments, etc.\n  if (this.comment) return false\n  if (this.empty) return f === ''\n\n  if (f === '/' && partial) return true\n\n  var options = this.options\n\n  // windows: need to use /, not \\\n  if (path.sep !== '/') {\n    f = f.split(path.sep).join('/')\n  }\n\n  // treat the test path as a set of pathparts.\n  f = f.split(slashSplit)\n  this.debug(this.pattern, 'split', f)\n\n  // just ONE of the pattern sets in this.set needs to match\n  // in order for it to be valid.  If negating, then just one\n  // match means that we have failed.\n  // Either way, return on the first hit.\n\n  var set = this.set\n  this.debug(this.pattern, 'set', set)\n\n  // Find the basename of the path by looking for the last non-empty segment\n  var filename\n  var i\n  for (i = f.length - 1; i >= 0; i--) {\n    filename = f[i]\n    if (filename) break\n  }\n\n  for (i = 0; i < set.length; i++) {\n    var pattern = set[i]\n    var file = f\n    if (options.matchBase && pattern.length === 1) {\n      file = [filename]\n    }\n    var hit = this.matchOne(file, pattern, partial)\n    if (hit) {\n      if (options.flipNegate) return true\n      return !this.negate\n    }\n  }\n\n  // didn't get any hits.  this is success if it's a negative\n  // pattern, failure otherwise.\n  if (options.flipNegate) return false\n  return this.negate\n}\n\n// set partial to true to test if, for example,\n// \"/a/b\" matches the start of \"/*/b/*/d\"\n// Partial means, if you run out of file before you run\n// out of pattern, then that's fine, as long as all\n// the parts match.\nMinimatch.prototype.matchOne = function (file, pattern, partial) {\n  var options = this.options\n\n  this.debug('matchOne',\n    { 'this': this, file: file, pattern: pattern })\n\n  this.debug('matchOne', file.length, pattern.length)\n\n  for (var fi = 0,\n      pi = 0,\n      fl = file.length,\n      pl = pattern.length\n      ; (fi < fl) && (pi < pl)\n      ; fi++, pi++) {\n    this.debug('matchOne loop')\n    var p = pattern[pi]\n    var f = file[fi]\n\n    this.debug(pattern, p, f)\n\n    // should be impossible.\n    // some invalid regexp stuff in the set.\n    if (p === false) return false\n\n    if (p === GLOBSTAR) {\n      this.debug('GLOBSTAR', [pattern, p, f])\n\n      // \"**\"\n      // a/**/b/**/c would match the following:\n      // a/b/x/y/z/c\n      // a/x/y/z/b/c\n      // a/b/x/b/x/c\n      // a/b/c\n      // To do this, take the rest of the pattern after\n      // the **, and see if it would match the file remainder.\n      // If so, return success.\n      // If not, the ** \"swallows\" a segment, and try again.\n      // This is recursively awful.\n      //\n      // a/**/b/**/c matching a/b/x/y/z/c\n      // - a matches a\n      // - doublestar\n      //   - matchOne(b/x/y/z/c, b/**/c)\n      //     - b matches b\n      //     - doublestar\n      //       - matchOne(x/y/z/c, c) -> no\n      //       - matchOne(y/z/c, c) -> no\n      //       - matchOne(z/c, c) -> no\n      //       - matchOne(c, c) yes, hit\n      var fr = fi\n      var pr = pi + 1\n      if (pr === pl) {\n        this.debug('** at the end')\n        // a ** at the end will just swallow the rest.\n        // We have found a match.\n        // however, it will not swallow /.x, unless\n        // options.dot is set.\n        // . and .. are *never* matched by **, for explosively\n        // exponential reasons.\n        for (; fi < fl; fi++) {\n          if (file[fi] === '.' || file[fi] === '..' ||\n            (!options.dot && file[fi].charAt(0) === '.')) return false\n        }\n        return true\n      }\n\n      // ok, let's see if we can swallow whatever we can.\n      while (fr < fl) {\n        var swallowee = file[fr]\n\n        this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n        // XXX remove this slice.  Just pass the start index.\n        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n          this.debug('globstar found match!', fr, fl, swallowee)\n          // found a match.\n          return true\n        } else {\n          // can't swallow \".\" or \"..\" ever.\n          // can only swallow \".foo\" when explicitly asked.\n          if (swallowee === '.' || swallowee === '..' ||\n            (!options.dot && swallowee.charAt(0) === '.')) {\n            this.debug('dot detected!', file, fr, pattern, pr)\n            break\n          }\n\n          // ** swallows a segment, and continue.\n          this.debug('globstar swallow a segment, and continue')\n          fr++\n        }\n      }\n\n      // no match was found.\n      // However, in partial mode, we can't say this is necessarily over.\n      // If there's more *pattern* left, then\n      if (partial) {\n        // ran out of file\n        this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n        if (fr === fl) return true\n      }\n      return false\n    }\n\n    // something other than **\n    // non-magic patterns just have to match exactly\n    // patterns with magic have been turned into regexps.\n    var hit\n    if (typeof p === 'string') {\n      if (options.nocase) {\n        hit = f.toLowerCase() === p.toLowerCase()\n      } else {\n        hit = f === p\n      }\n      this.debug('string match', p, f, hit)\n    } else {\n      hit = f.match(p)\n      this.debug('pattern match', p, f, hit)\n    }\n\n    if (!hit) return false\n  }\n\n  // Note: ending in / means that we'll get a final \"\"\n  // at the end of the pattern.  This can only match a\n  // corresponding \"\" at the end of the file.\n  // If the file ends in /, then it can only match a\n  // a pattern that ends in /, unless the pattern just\n  // doesn't have any more for it. But, a/b/ should *not*\n  // match \"a/b/*\", even though \"\" matches against the\n  // [^/]*? pattern, except in partial mode, where it might\n  // simply not be reached yet.\n  // However, a/b/ should still satisfy a/*\n\n  // now either we fell off the end of the pattern, or we're done.\n  if (fi === fl && pi === pl) {\n    // ran out of pattern and filename at the same time.\n    // an exact hit!\n    return true\n  } else if (fi === fl) {\n    // ran out of file, but still had pattern left.\n    // this is ok if we're doing the match as part of\n    // a glob fs traversal.\n    return partial\n  } else if (pi === pl) {\n    // ran out of pattern, still have file left.\n    // this is only acceptable if we're on the very last\n    // empty segment of a file with a trailing slash.\n    // a/* should match a/b/\n    var emptyFileEnd = (fi === fl - 1) && (file[fi] === '')\n    return emptyFileEnd\n  }\n\n  // should be unreachable.\n  throw new Error('wtf?')\n}\n\n// replace stuff like \\* with *\nfunction globUnescape (s) {\n  return s.replace(/\\\\(.)/g, '$1')\n}\n\nfunction regExpEscape (s) {\n  return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/minimatch/minimatch.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":810,"column":0},"generated":{"line":810,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":811,"column":0},"generated":{"line":811,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":812,"column":0},"generated":{"line":812,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":813,"column":0},"generated":{"line":813,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":814,"column":0},"generated":{"line":814,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":815,"column":0},"generated":{"line":815,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":816,"column":0},"generated":{"line":816,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":817,"column":0},"generated":{"line":817,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":818,"column":0},"generated":{"line":818,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":819,"column":0},"generated":{"line":819,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":820,"column":0},"generated":{"line":820,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":821,"column":0},"generated":{"line":821,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":822,"column":0},"generated":{"line":822,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":823,"column":0},"generated":{"line":823,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":824,"column":0},"generated":{"line":824,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":825,"column":0},"generated":{"line":825,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":826,"column":0},"generated":{"line":826,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":827,"column":0},"generated":{"line":827,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":828,"column":0},"generated":{"line":828,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":829,"column":0},"generated":{"line":829,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":830,"column":0},"generated":{"line":830,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":831,"column":0},"generated":{"line":831,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":832,"column":0},"generated":{"line":832,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":833,"column":0},"generated":{"line":833,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":834,"column":0},"generated":{"line":834,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":835,"column":0},"generated":{"line":835,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":836,"column":0},"generated":{"line":836,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":837,"column":0},"generated":{"line":837,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":838,"column":0},"generated":{"line":838,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":839,"column":0},"generated":{"line":839,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":840,"column":0},"generated":{"line":840,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":841,"column":0},"generated":{"line":841,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":842,"column":0},"generated":{"line":842,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":843,"column":0},"generated":{"line":843,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":844,"column":0},"generated":{"line":844,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":845,"column":0},"generated":{"line":845,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":846,"column":0},"generated":{"line":846,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":847,"column":0},"generated":{"line":847,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":848,"column":0},"generated":{"line":848,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":849,"column":0},"generated":{"line":849,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":850,"column":0},"generated":{"line":850,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":851,"column":0},"generated":{"line":851,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":852,"column":0},"generated":{"line":852,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":853,"column":0},"generated":{"line":853,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":854,"column":0},"generated":{"line":854,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":855,"column":0},"generated":{"line":855,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":856,"column":0},"generated":{"line":856,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":857,"column":0},"generated":{"line":857,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":858,"column":0},"generated":{"line":858,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":859,"column":0},"generated":{"line":859,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":860,"column":0},"generated":{"line":860,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":861,"column":0},"generated":{"line":861,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":862,"column":0},"generated":{"line":862,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":863,"column":0},"generated":{"line":863,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":864,"column":0},"generated":{"line":864,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":865,"column":0},"generated":{"line":865,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":866,"column":0},"generated":{"line":866,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":867,"column":0},"generated":{"line":867,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":868,"column":0},"generated":{"line":868,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":869,"column":0},"generated":{"line":869,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":870,"column":0},"generated":{"line":870,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":871,"column":0},"generated":{"line":871,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":872,"column":0},"generated":{"line":872,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":873,"column":0},"generated":{"line":873,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":874,"column":0},"generated":{"line":874,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":875,"column":0},"generated":{"line":875,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":876,"column":0},"generated":{"line":876,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":877,"column":0},"generated":{"line":877,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":878,"column":0},"generated":{"line":878,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":879,"column":0},"generated":{"line":879,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":880,"column":0},"generated":{"line":880,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":881,"column":0},"generated":{"line":881,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":882,"column":0},"generated":{"line":882,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":883,"column":0},"generated":{"line":883,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":884,"column":0},"generated":{"line":884,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":885,"column":0},"generated":{"line":885,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":886,"column":0},"generated":{"line":886,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":887,"column":0},"generated":{"line":887,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":888,"column":0},"generated":{"line":888,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":889,"column":0},"generated":{"line":889,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":890,"column":0},"generated":{"line":890,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":891,"column":0},"generated":{"line":891,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":892,"column":0},"generated":{"line":892,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":893,"column":0},"generated":{"line":893,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":894,"column":0},"generated":{"line":894,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":895,"column":0},"generated":{"line":895,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":896,"column":0},"generated":{"line":896,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":897,"column":0},"generated":{"line":897,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":898,"column":0},"generated":{"line":898,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":899,"column":0},"generated":{"line":899,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":900,"column":0},"generated":{"line":900,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":901,"column":0},"generated":{"line":901,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":902,"column":0},"generated":{"line":902,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":903,"column":0},"generated":{"line":903,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":904,"column":0},"generated":{"line":904,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":905,"column":0},"generated":{"line":905,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":906,"column":0},"generated":{"line":906,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":907,"column":0},"generated":{"line":907,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":908,"column":0},"generated":{"line":908,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":909,"column":0},"generated":{"line":909,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":910,"column":0},"generated":{"line":910,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":911,"column":0},"generated":{"line":911,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":912,"column":0},"generated":{"line":912,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":913,"column":0},"generated":{"line":913,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":914,"column":0},"generated":{"line":914,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":915,"column":0},"generated":{"line":915,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":916,"column":0},"generated":{"line":916,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":917,"column":0},"generated":{"line":917,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":918,"column":0},"generated":{"line":918,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":919,"column":0},"generated":{"line":919,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":920,"column":0},"generated":{"line":920,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":921,"column":0},"generated":{"line":921,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":922,"column":0},"generated":{"line":922,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":923,"column":0},"generated":{"line":923,"column":0}},{"source":"node_modules/minimatch/minimatch.js","original":{"line":924,"column":0},"generated":{"line":924,"column":0}}],"sources":{"node_modules/minimatch/minimatch.js":"module.exports = minimatch\nminimatch.Minimatch = Minimatch\n\nvar path = { sep: '/' }\ntry {\n  path = require('path')\n} catch (er) {}\n\nvar GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\nvar expand = require('brace-expansion')\n\nvar plTypes = {\n  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},\n  '?': { open: '(?:', close: ')?' },\n  '+': { open: '(?:', close: ')+' },\n  '*': { open: '(?:', close: ')*' },\n  '@': { open: '(?:', close: ')' }\n}\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nvar qmark = '[^/]'\n\n// * => any number of characters\nvar star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nvar twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nvar twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?'\n\n// characters that need to be escaped in RegExp.\nvar reSpecials = charSet('().*{}+?[]^$\\\\!')\n\n// \"abc\" -> { a:true, b:true, c:true }\nfunction charSet (s) {\n  return s.split('').reduce(function (set, c) {\n    set[c] = true\n    return set\n  }, {})\n}\n\n// normalizes slashes.\nvar slashSplit = /\\/+/\n\nminimatch.filter = filter\nfunction filter (pattern, options) {\n  options = options || {}\n  return function (p, i, list) {\n    return minimatch(p, pattern, options)\n  }\n}\n\nfunction ext (a, b) {\n  a = a || {}\n  b = b || {}\n  var t = {}\n  Object.keys(b).forEach(function (k) {\n    t[k] = b[k]\n  })\n  Object.keys(a).forEach(function (k) {\n    t[k] = a[k]\n  })\n  return t\n}\n\nminimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return minimatch\n\n  var orig = minimatch\n\n  var m = function minimatch (p, pattern, options) {\n    return orig.minimatch(p, pattern, ext(def, options))\n  }\n\n  m.Minimatch = function Minimatch (pattern, options) {\n    return new orig.Minimatch(pattern, ext(def, options))\n  }\n\n  return m\n}\n\nMinimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return Minimatch\n  return minimatch.defaults(def).Minimatch\n}\n\nfunction minimatch (p, pattern, options) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  // \"\" only matches \"\"\n  if (pattern.trim() === '') return p === ''\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nfunction Minimatch (pattern, options) {\n  if (!(this instanceof Minimatch)) {\n    return new Minimatch(pattern, options)\n  }\n\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n  pattern = pattern.trim()\n\n  // windows support: need to use /, not \\\n  if (path.sep !== '/') {\n    pattern = pattern.split(path.sep).join('/')\n  }\n\n  this.options = options\n  this.set = []\n  this.pattern = pattern\n  this.regexp = null\n  this.negate = false\n  this.comment = false\n  this.empty = false\n\n  // make the set of regexps etc.\n  this.make()\n}\n\nMinimatch.prototype.debug = function () {}\n\nMinimatch.prototype.make = make\nfunction make () {\n  // don't do it more than once.\n  if (this._made) return\n\n  var pattern = this.pattern\n  var options = this.options\n\n  // empty patterns and comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    this.comment = true\n    return\n  }\n  if (!pattern) {\n    this.empty = true\n    return\n  }\n\n  // step 1: figure out negation, etc.\n  this.parseNegate()\n\n  // step 2: expand braces\n  var set = this.globSet = this.braceExpand()\n\n  if (options.debug) this.debug = console.error\n\n  this.debug(this.pattern, set)\n\n  // step 3: now we have a set, so turn each one into a series of path-portion\n  // matching patterns.\n  // These will be regexps, except in the case of \"**\", which is\n  // set to the GLOBSTAR object for globstar behavior,\n  // and will not contain any / characters\n  set = this.globParts = set.map(function (s) {\n    return s.split(slashSplit)\n  })\n\n  this.debug(this.pattern, set)\n\n  // glob --> regexps\n  set = set.map(function (s, si, set) {\n    return s.map(this.parse, this)\n  }, this)\n\n  this.debug(this.pattern, set)\n\n  // filter out everything that didn't compile properly.\n  set = set.filter(function (s) {\n    return s.indexOf(false) === -1\n  })\n\n  this.debug(this.pattern, set)\n\n  this.set = set\n}\n\nMinimatch.prototype.parseNegate = parseNegate\nfunction parseNegate () {\n  var pattern = this.pattern\n  var negate = false\n  var options = this.options\n  var negateOffset = 0\n\n  if (options.nonegate) return\n\n  for (var i = 0, l = pattern.length\n    ; i < l && pattern.charAt(i) === '!'\n    ; i++) {\n    negate = !negate\n    negateOffset++\n  }\n\n  if (negateOffset) this.pattern = pattern.substr(negateOffset)\n  this.negate = negate\n}\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch.braceExpand = function (pattern, options) {\n  return braceExpand(pattern, options)\n}\n\nMinimatch.prototype.braceExpand = braceExpand\n\nfunction braceExpand (pattern, options) {\n  if (!options) {\n    if (this instanceof Minimatch) {\n      options = this.options\n    } else {\n      options = {}\n    }\n  }\n\n  pattern = typeof pattern === 'undefined'\n    ? this.pattern : pattern\n\n  if (typeof pattern === 'undefined') {\n    throw new TypeError('undefined pattern')\n  }\n\n  if (options.nobrace ||\n    !pattern.match(/\\{.*\\}/)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nMinimatch.prototype.parse = parse\nvar SUBPARSE = {}\nfunction parse (pattern, isSub) {\n  if (pattern.length > 1024 * 64) {\n    throw new TypeError('pattern is too long')\n  }\n\n  var options = this.options\n\n  // shortcuts\n  if (!options.noglobstar && pattern === '**') return GLOBSTAR\n  if (pattern === '') return ''\n\n  var re = ''\n  var hasMagic = !!options.nocase\n  var escaping = false\n  // ? => one single character\n  var patternListStack = []\n  var negativeLists = []\n  var stateChar\n  var inClass = false\n  var reClassStart = -1\n  var classStart = -1\n  // . and .. never match anything that doesn't start with .,\n  // even when options.dot is set.\n  var patternStart = pattern.charAt(0) === '.' ? '' // anything\n  // not (start or / followed by . or .. followed by / or end)\n  : options.dot ? '(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))'\n  : '(?!\\\\.)'\n  var self = this\n\n  function clearStateChar () {\n    if (stateChar) {\n      // we had some state-tracking character\n      // that wasn't consumed by this pass.\n      switch (stateChar) {\n        case '*':\n          re += star\n          hasMagic = true\n        break\n        case '?':\n          re += qmark\n          hasMagic = true\n        break\n        default:\n          re += '\\\\' + stateChar\n        break\n      }\n      self.debug('clearStateChar %j %j', stateChar, re)\n      stateChar = false\n    }\n  }\n\n  for (var i = 0, len = pattern.length, c\n    ; (i < len) && (c = pattern.charAt(i))\n    ; i++) {\n    this.debug('%s\\t%s %s %j', pattern, i, re, c)\n\n    // skip over any that are escaped.\n    if (escaping && reSpecials[c]) {\n      re += '\\\\' + c\n      escaping = false\n      continue\n    }\n\n    switch (c) {\n      case '/':\n        // completely not allowed, even escaped.\n        // Should already be path-split by now.\n        return false\n\n      case '\\\\':\n        clearStateChar()\n        escaping = true\n      continue\n\n      // the various stateChar values\n      // for the \"extglob\" stuff.\n      case '?':\n      case '*':\n      case '+':\n      case '@':\n      case '!':\n        this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c)\n\n        // all of those are literals inside a class, except that\n        // the glob [!a] means [^a] in regexp\n        if (inClass) {\n          this.debug('  in class')\n          if (c === '!' && i === classStart + 1) c = '^'\n          re += c\n          continue\n        }\n\n        // if we already have a stateChar, then it means\n        // that there was something like ** or +? in there.\n        // Handle the stateChar, then proceed with this one.\n        self.debug('call clearStateChar %j', stateChar)\n        clearStateChar()\n        stateChar = c\n        // if extglob is disabled, then +(asdf|foo) isn't a thing.\n        // just clear the statechar *now*, rather than even diving into\n        // the patternList stuff.\n        if (options.noext) clearStateChar()\n      continue\n\n      case '(':\n        if (inClass) {\n          re += '('\n          continue\n        }\n\n        if (!stateChar) {\n          re += '\\\\('\n          continue\n        }\n\n        patternListStack.push({\n          type: stateChar,\n          start: i - 1,\n          reStart: re.length,\n          open: plTypes[stateChar].open,\n          close: plTypes[stateChar].close\n        })\n        // negation is (?:(?!js)[^/]*)\n        re += stateChar === '!' ? '(?:(?!(?:' : '(?:'\n        this.debug('plType %j %j', stateChar, re)\n        stateChar = false\n      continue\n\n      case ')':\n        if (inClass || !patternListStack.length) {\n          re += '\\\\)'\n          continue\n        }\n\n        clearStateChar()\n        hasMagic = true\n        var pl = patternListStack.pop()\n        // negation is (?:(?!js)[^/]*)\n        // The others are (?:<pattern>)<type>\n        re += pl.close\n        if (pl.type === '!') {\n          negativeLists.push(pl)\n        }\n        pl.reEnd = re.length\n      continue\n\n      case '|':\n        if (inClass || !patternListStack.length || escaping) {\n          re += '\\\\|'\n          escaping = false\n          continue\n        }\n\n        clearStateChar()\n        re += '|'\n      continue\n\n      // these are mostly the same in regexp and glob\n      case '[':\n        // swallow any state-tracking char before the [\n        clearStateChar()\n\n        if (inClass) {\n          re += '\\\\' + c\n          continue\n        }\n\n        inClass = true\n        classStart = i\n        reClassStart = re.length\n        re += c\n      continue\n\n      case ']':\n        //  a right bracket shall lose its special\n        //  meaning and represent itself in\n        //  a bracket expression if it occurs\n        //  first in the list.  -- POSIX.2 2.8.3.2\n        if (i === classStart + 1 || !inClass) {\n          re += '\\\\' + c\n          escaping = false\n          continue\n        }\n\n        // handle the case where we left a class open.\n        // \"[z-a]\" is valid, equivalent to \"\\[z-a\\]\"\n        if (inClass) {\n          // split where the last [ was, make sure we don't have\n          // an invalid re. if so, re-walk the contents of the\n          // would-be class to re-translate any characters that\n          // were passed through as-is\n          // TODO: It would probably be faster to determine this\n          // without a try/catch and a new RegExp, but it's tricky\n          // to do safely.  For now, this is safe and works.\n          var cs = pattern.substring(classStart + 1, i)\n          try {\n            RegExp('[' + cs + ']')\n          } catch (er) {\n            // not a valid class!\n            var sp = this.parse(cs, SUBPARSE)\n            re = re.substr(0, reClassStart) + '\\\\[' + sp[0] + '\\\\]'\n            hasMagic = hasMagic || sp[1]\n            inClass = false\n            continue\n          }\n        }\n\n        // finish up the class.\n        hasMagic = true\n        inClass = false\n        re += c\n      continue\n\n      default:\n        // swallow any state char that wasn't consumed\n        clearStateChar()\n\n        if (escaping) {\n          // no need\n          escaping = false\n        } else if (reSpecials[c]\n          && !(c === '^' && inClass)) {\n          re += '\\\\'\n        }\n\n        re += c\n\n    } // switch\n  } // for\n\n  // handle the case where we left a class open.\n  // \"[abc\" is valid, equivalent to \"\\[abc\"\n  if (inClass) {\n    // split where the last [ was, and escape it\n    // this is a huge pita.  We now have to re-walk\n    // the contents of the would-be class to re-translate\n    // any characters that were passed through as-is\n    cs = pattern.substr(classStart + 1)\n    sp = this.parse(cs, SUBPARSE)\n    re = re.substr(0, reClassStart) + '\\\\[' + sp[0]\n    hasMagic = hasMagic || sp[1]\n  }\n\n  // handle the case where we had a +( thing at the *end*\n  // of the pattern.\n  // each pattern list stack adds 3 chars, and we need to go through\n  // and escape any | chars that were passed through as-is for the regexp.\n  // Go through and escape them, taking care not to double-escape any\n  // | chars that were already escaped.\n  for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\n    var tail = re.slice(pl.reStart + pl.open.length)\n    this.debug('setting tail', re, pl)\n    // maybe some even number of \\, then maybe 1 \\, followed by a |\n    tail = tail.replace(/((?:\\\\{2}){0,64})(\\\\?)\\|/g, function (_, $1, $2) {\n      if (!$2) {\n        // the | isn't already escaped, so escape it.\n        $2 = '\\\\'\n      }\n\n      // need to escape all those slashes *again*, without escaping the\n      // one that we need for escaping the | character.  As it works out,\n      // escaping an even number of slashes can be done by simply repeating\n      // it exactly after itself.  That's why this trick works.\n      //\n      // I am sorry that you have to see this.\n      return $1 + $1 + $2 + '|'\n    })\n\n    this.debug('tail=%j\\n   %s', tail, tail, pl, re)\n    var t = pl.type === '*' ? star\n      : pl.type === '?' ? qmark\n      : '\\\\' + pl.type\n\n    hasMagic = true\n    re = re.slice(0, pl.reStart) + t + '\\\\(' + tail\n  }\n\n  // handle trailing things that only matter at the very end.\n  clearStateChar()\n  if (escaping) {\n    // trailing \\\\\n    re += '\\\\\\\\'\n  }\n\n  // only need to apply the nodot start if the re starts with\n  // something that could conceivably capture a dot\n  var addPatternStart = false\n  switch (re.charAt(0)) {\n    case '.':\n    case '[':\n    case '(': addPatternStart = true\n  }\n\n  // Hack to work around lack of negative lookbehind in JS\n  // A pattern like: *.!(x).!(y|z) needs to ensure that a name\n  // like 'a.xyz.yz' doesn't match.  So, the first negative\n  // lookahead, has to look ALL the way ahead, to the end of\n  // the pattern.\n  for (var n = negativeLists.length - 1; n > -1; n--) {\n    var nl = negativeLists[n]\n\n    var nlBefore = re.slice(0, nl.reStart)\n    var nlFirst = re.slice(nl.reStart, nl.reEnd - 8)\n    var nlLast = re.slice(nl.reEnd - 8, nl.reEnd)\n    var nlAfter = re.slice(nl.reEnd)\n\n    nlLast += nlAfter\n\n    // Handle nested stuff like *(*.js|!(*.json)), where open parens\n    // mean that we should *not* include the ) in the bit that is considered\n    // \"after\" the negated section.\n    var openParensBefore = nlBefore.split('(').length - 1\n    var cleanAfter = nlAfter\n    for (i = 0; i < openParensBefore; i++) {\n      cleanAfter = cleanAfter.replace(/\\)[+*?]?/, '')\n    }\n    nlAfter = cleanAfter\n\n    var dollar = ''\n    if (nlAfter === '' && isSub !== SUBPARSE) {\n      dollar = '$'\n    }\n    var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast\n    re = newRe\n  }\n\n  // if the re is not \"\" at this point, then we need to make sure\n  // it doesn't match against an empty path part.\n  // Otherwise a/* will match a/, which it should not.\n  if (re !== '' && hasMagic) {\n    re = '(?=.)' + re\n  }\n\n  if (addPatternStart) {\n    re = patternStart + re\n  }\n\n  // parsing just a piece of a larger pattern.\n  if (isSub === SUBPARSE) {\n    return [re, hasMagic]\n  }\n\n  // skip the regexp for non-magical patterns\n  // unescape anything in it, though, so that it'll be\n  // an exact match against a file etc.\n  if (!hasMagic) {\n    return globUnescape(pattern)\n  }\n\n  var flags = options.nocase ? 'i' : ''\n  try {\n    var regExp = new RegExp('^' + re + '$', flags)\n  } catch (er) {\n    // If it was an invalid regular expression, then it can't match\n    // anything.  This trick looks for a character after the end of\n    // the string, which is of course impossible, except in multi-line\n    // mode, but it's not a /m regex.\n    return new RegExp('$.')\n  }\n\n  regExp._glob = pattern\n  regExp._src = re\n\n  return regExp\n}\n\nminimatch.makeRe = function (pattern, options) {\n  return new Minimatch(pattern, options || {}).makeRe()\n}\n\nMinimatch.prototype.makeRe = makeRe\nfunction makeRe () {\n  if (this.regexp || this.regexp === false) return this.regexp\n\n  // at this point, this.set is a 2d array of partial\n  // pattern strings, or \"**\".\n  //\n  // It's better to use .match().  This function shouldn't\n  // be used, really, but it's pretty convenient sometimes,\n  // when you just want to work with a regex.\n  var set = this.set\n\n  if (!set.length) {\n    this.regexp = false\n    return this.regexp\n  }\n  var options = this.options\n\n  var twoStar = options.noglobstar ? star\n    : options.dot ? twoStarDot\n    : twoStarNoDot\n  var flags = options.nocase ? 'i' : ''\n\n  var re = set.map(function (pattern) {\n    return pattern.map(function (p) {\n      return (p === GLOBSTAR) ? twoStar\n      : (typeof p === 'string') ? regExpEscape(p)\n      : p._src\n    }).join('\\\\\\/')\n  }).join('|')\n\n  // must match entire pattern\n  // ending in a * or ** will make it less strict.\n  re = '^(?:' + re + ')$'\n\n  // can match anything, as long as it's not this.\n  if (this.negate) re = '^(?!' + re + ').*$'\n\n  try {\n    this.regexp = new RegExp(re, flags)\n  } catch (ex) {\n    this.regexp = false\n  }\n  return this.regexp\n}\n\nminimatch.match = function (list, pattern, options) {\n  options = options || {}\n  var mm = new Minimatch(pattern, options)\n  list = list.filter(function (f) {\n    return mm.match(f)\n  })\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\n\nMinimatch.prototype.match = match\nfunction match (f, partial) {\n  this.debug('match', f, this.pattern)\n  // short-circuit in the case of busted things.\n  // comments, etc.\n  if (this.comment) return false\n  if (this.empty) return f === ''\n\n  if (f === '/' && partial) return true\n\n  var options = this.options\n\n  // windows: need to use /, not \\\n  if (path.sep !== '/') {\n    f = f.split(path.sep).join('/')\n  }\n\n  // treat the test path as a set of pathparts.\n  f = f.split(slashSplit)\n  this.debug(this.pattern, 'split', f)\n\n  // just ONE of the pattern sets in this.set needs to match\n  // in order for it to be valid.  If negating, then just one\n  // match means that we have failed.\n  // Either way, return on the first hit.\n\n  var set = this.set\n  this.debug(this.pattern, 'set', set)\n\n  // Find the basename of the path by looking for the last non-empty segment\n  var filename\n  var i\n  for (i = f.length - 1; i >= 0; i--) {\n    filename = f[i]\n    if (filename) break\n  }\n\n  for (i = 0; i < set.length; i++) {\n    var pattern = set[i]\n    var file = f\n    if (options.matchBase && pattern.length === 1) {\n      file = [filename]\n    }\n    var hit = this.matchOne(file, pattern, partial)\n    if (hit) {\n      if (options.flipNegate) return true\n      return !this.negate\n    }\n  }\n\n  // didn't get any hits.  this is success if it's a negative\n  // pattern, failure otherwise.\n  if (options.flipNegate) return false\n  return this.negate\n}\n\n// set partial to true to test if, for example,\n// \"/a/b\" matches the start of \"/*/b/*/d\"\n// Partial means, if you run out of file before you run\n// out of pattern, then that's fine, as long as all\n// the parts match.\nMinimatch.prototype.matchOne = function (file, pattern, partial) {\n  var options = this.options\n\n  this.debug('matchOne',\n    { 'this': this, file: file, pattern: pattern })\n\n  this.debug('matchOne', file.length, pattern.length)\n\n  for (var fi = 0,\n      pi = 0,\n      fl = file.length,\n      pl = pattern.length\n      ; (fi < fl) && (pi < pl)\n      ; fi++, pi++) {\n    this.debug('matchOne loop')\n    var p = pattern[pi]\n    var f = file[fi]\n\n    this.debug(pattern, p, f)\n\n    // should be impossible.\n    // some invalid regexp stuff in the set.\n    if (p === false) return false\n\n    if (p === GLOBSTAR) {\n      this.debug('GLOBSTAR', [pattern, p, f])\n\n      // \"**\"\n      // a/**/b/**/c would match the following:\n      // a/b/x/y/z/c\n      // a/x/y/z/b/c\n      // a/b/x/b/x/c\n      // a/b/c\n      // To do this, take the rest of the pattern after\n      // the **, and see if it would match the file remainder.\n      // If so, return success.\n      // If not, the ** \"swallows\" a segment, and try again.\n      // This is recursively awful.\n      //\n      // a/**/b/**/c matching a/b/x/y/z/c\n      // - a matches a\n      // - doublestar\n      //   - matchOne(b/x/y/z/c, b/**/c)\n      //     - b matches b\n      //     - doublestar\n      //       - matchOne(x/y/z/c, c) -> no\n      //       - matchOne(y/z/c, c) -> no\n      //       - matchOne(z/c, c) -> no\n      //       - matchOne(c, c) yes, hit\n      var fr = fi\n      var pr = pi + 1\n      if (pr === pl) {\n        this.debug('** at the end')\n        // a ** at the end will just swallow the rest.\n        // We have found a match.\n        // however, it will not swallow /.x, unless\n        // options.dot is set.\n        // . and .. are *never* matched by **, for explosively\n        // exponential reasons.\n        for (; fi < fl; fi++) {\n          if (file[fi] === '.' || file[fi] === '..' ||\n            (!options.dot && file[fi].charAt(0) === '.')) return false\n        }\n        return true\n      }\n\n      // ok, let's see if we can swallow whatever we can.\n      while (fr < fl) {\n        var swallowee = file[fr]\n\n        this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n        // XXX remove this slice.  Just pass the start index.\n        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n          this.debug('globstar found match!', fr, fl, swallowee)\n          // found a match.\n          return true\n        } else {\n          // can't swallow \".\" or \"..\" ever.\n          // can only swallow \".foo\" when explicitly asked.\n          if (swallowee === '.' || swallowee === '..' ||\n            (!options.dot && swallowee.charAt(0) === '.')) {\n            this.debug('dot detected!', file, fr, pattern, pr)\n            break\n          }\n\n          // ** swallows a segment, and continue.\n          this.debug('globstar swallow a segment, and continue')\n          fr++\n        }\n      }\n\n      // no match was found.\n      // However, in partial mode, we can't say this is necessarily over.\n      // If there's more *pattern* left, then\n      if (partial) {\n        // ran out of file\n        this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n        if (fr === fl) return true\n      }\n      return false\n    }\n\n    // something other than **\n    // non-magic patterns just have to match exactly\n    // patterns with magic have been turned into regexps.\n    var hit\n    if (typeof p === 'string') {\n      if (options.nocase) {\n        hit = f.toLowerCase() === p.toLowerCase()\n      } else {\n        hit = f === p\n      }\n      this.debug('string match', p, f, hit)\n    } else {\n      hit = f.match(p)\n      this.debug('pattern match', p, f, hit)\n    }\n\n    if (!hit) return false\n  }\n\n  // Note: ending in / means that we'll get a final \"\"\n  // at the end of the pattern.  This can only match a\n  // corresponding \"\" at the end of the file.\n  // If the file ends in /, then it can only match a\n  // a pattern that ends in /, unless the pattern just\n  // doesn't have any more for it. But, a/b/ should *not*\n  // match \"a/b/*\", even though \"\" matches against the\n  // [^/]*? pattern, except in partial mode, where it might\n  // simply not be reached yet.\n  // However, a/b/ should still satisfy a/*\n\n  // now either we fell off the end of the pattern, or we're done.\n  if (fi === fl && pi === pl) {\n    // ran out of pattern and filename at the same time.\n    // an exact hit!\n    return true\n  } else if (fi === fl) {\n    // ran out of file, but still had pattern left.\n    // this is ok if we're doing the match as part of\n    // a glob fs traversal.\n    return partial\n  } else if (pi === pl) {\n    // ran out of pattern, still have file left.\n    // this is only acceptable if we're on the very last\n    // empty segment of a file with a trailing slash.\n    // a/* should match a/b/\n    var emptyFileEnd = (fi === fl - 1) && (file[fi] === '')\n    return emptyFileEnd\n  }\n\n  // should be unreachable.\n  throw new Error('wtf?')\n}\n\n// replace stuff like \\* with *\nfunction globUnescape (s) {\n  return s.replace(/\\\\(.)/g, '$1')\n}\n\nfunction regExpEscape (s) {\n  return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n}\n"},"lineCount":924}},"error":null,"hash":"8f992e5cb78b112227f12d1d0b8002a3","cacheData":{"env":{}}}