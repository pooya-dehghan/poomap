{"id":"node_modules/signal-exit/index.js","dependencies":[{"name":"C:\\Users\\pooya\\Desktop\\poomap\\package.json","includedInParent":true,"mtime":1594932269761},{"name":"C:\\Users\\pooya\\Desktop\\poomap\\node_modules\\signal-exit\\package.json","includedInParent":true,"mtime":1594932268886},{"name":"assert","loc":{"line":4,"column":21},"parent":"C:\\Users\\pooya\\Desktop\\poomap\\node_modules\\signal-exit\\index.js","resolved":"C:\\Users\\pooya\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\assert\\assert.js"},{"name":"./signals.js","loc":{"line":5,"column":22},"parent":"C:\\Users\\pooya\\Desktop\\poomap\\node_modules\\signal-exit\\index.js","resolved":"C:\\Users\\pooya\\Desktop\\poomap\\node_modules\\signal-exit\\signals.js"},{"name":"events","loc":{"line":8,"column":17},"parent":"C:\\Users\\pooya\\Desktop\\poomap\\node_modules\\signal-exit\\index.js","resolved":"C:\\Users\\pooya\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\events\\events.js"},{"name":"process","parent":"C:\\Users\\pooya\\Desktop\\poomap\\node_modules\\signal-exit\\index.js","resolved":"C:\\Users\\pooya\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\process\\browser.js"}],"generated":{"js":"var process = require(\"process\");\n// Note: since nyc uses this module to output coverage, any lines\n// that are in the direct sync flow of nyc's outputCoverage are\n// ignored, since we can never get coverage for them.\nvar assert = require('assert')\nvar signals = require('./signals.js')\nvar isWin = /^win/i.test(process.platform)\n\nvar EE = require('events')\n/* istanbul ignore if */\nif (typeof EE !== 'function') {\n  EE = EE.EventEmitter\n}\n\nvar emitter\nif (process.__signal_exit_emitter__) {\n  emitter = process.__signal_exit_emitter__\n} else {\n  emitter = process.__signal_exit_emitter__ = new EE()\n  emitter.count = 0\n  emitter.emitted = {}\n}\n\n// Because this emitter is a global, we have to check to see if a\n// previous version of this library failed to enable infinite listeners.\n// I know what you're about to say.  But literally everything about\n// signal-exit is a compromise with evil.  Get used to it.\nif (!emitter.infinite) {\n  emitter.setMaxListeners(Infinity)\n  emitter.infinite = true\n}\n\nmodule.exports = function (cb, opts) {\n  assert.equal(typeof cb, 'function', 'a callback must be provided for exit handler')\n\n  if (loaded === false) {\n    load()\n  }\n\n  var ev = 'exit'\n  if (opts && opts.alwaysLast) {\n    ev = 'afterexit'\n  }\n\n  var remove = function () {\n    emitter.removeListener(ev, cb)\n    if (emitter.listeners('exit').length === 0 &&\n        emitter.listeners('afterexit').length === 0) {\n      unload()\n    }\n  }\n  emitter.on(ev, cb)\n\n  return remove\n}\n\nmodule.exports.unload = unload\nfunction unload () {\n  if (!loaded) {\n    return\n  }\n  loaded = false\n\n  signals.forEach(function (sig) {\n    try {\n      process.removeListener(sig, sigListeners[sig])\n    } catch (er) {}\n  })\n  process.emit = originalProcessEmit\n  process.reallyExit = originalProcessReallyExit\n  emitter.count -= 1\n}\n\nfunction emit (event, code, signal) {\n  if (emitter.emitted[event]) {\n    return\n  }\n  emitter.emitted[event] = true\n  emitter.emit(event, code, signal)\n}\n\n// { <signal>: <listener fn>, ... }\nvar sigListeners = {}\nsignals.forEach(function (sig) {\n  sigListeners[sig] = function listener () {\n    // If there are no other listeners, an exit is coming!\n    // Simplest way: remove us and then re-send the signal.\n    // We know that this will kill the process, so we can\n    // safely emit now.\n    var listeners = process.listeners(sig)\n    if (listeners.length === emitter.count) {\n      unload()\n      emit('exit', null, sig)\n      /* istanbul ignore next */\n      emit('afterexit', null, sig)\n      /* istanbul ignore next */\n      if (isWin && sig === 'SIGHUP') {\n        // \"SIGHUP\" throws an `ENOSYS` error on Windows,\n        // so use a supported signal instead\n        sig = 'SIGINT'\n      }\n      process.kill(process.pid, sig)\n    }\n  }\n})\n\nmodule.exports.signals = function () {\n  return signals\n}\n\nmodule.exports.load = load\n\nvar loaded = false\n\nfunction load () {\n  if (loaded) {\n    return\n  }\n  loaded = true\n\n  // This is the number of onSignalExit's that are in play.\n  // It's important so that we can count the correct number of\n  // listeners on signals, and don't wait for the other one to\n  // handle it instead of us.\n  emitter.count += 1\n\n  signals = signals.filter(function (sig) {\n    try {\n      process.on(sig, sigListeners[sig])\n      return true\n    } catch (er) {\n      return false\n    }\n  })\n\n  process.emit = processEmit\n  process.reallyExit = processReallyExit\n}\n\nvar originalProcessReallyExit = process.reallyExit\nfunction processReallyExit (code) {\n  process.exitCode = code || 0\n  emit('exit', process.exitCode, null)\n  /* istanbul ignore next */\n  emit('afterexit', process.exitCode, null)\n  /* istanbul ignore next */\n  originalProcessReallyExit.call(process, process.exitCode)\n}\n\nvar originalProcessEmit = process.emit\nfunction processEmit (ev, arg) {\n  if (ev === 'exit') {\n    if (arg !== undefined) {\n      process.exitCode = arg\n    }\n    var ret = originalProcessEmit.apply(this, arguments)\n    emit('exit', process.exitCode, null)\n    /* istanbul ignore next */\n    emit('afterexit', process.exitCode, null)\n    return ret\n  } else {\n    return originalProcessEmit.apply(this, arguments)\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/signal-exit/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/signal-exit/index.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}}],"sources":{"node_modules/signal-exit/index.js":"// Note: since nyc uses this module to output coverage, any lines\n// that are in the direct sync flow of nyc's outputCoverage are\n// ignored, since we can never get coverage for them.\nvar assert = require('assert')\nvar signals = require('./signals.js')\nvar isWin = /^win/i.test(process.platform)\n\nvar EE = require('events')\n/* istanbul ignore if */\nif (typeof EE !== 'function') {\n  EE = EE.EventEmitter\n}\n\nvar emitter\nif (process.__signal_exit_emitter__) {\n  emitter = process.__signal_exit_emitter__\n} else {\n  emitter = process.__signal_exit_emitter__ = new EE()\n  emitter.count = 0\n  emitter.emitted = {}\n}\n\n// Because this emitter is a global, we have to check to see if a\n// previous version of this library failed to enable infinite listeners.\n// I know what you're about to say.  But literally everything about\n// signal-exit is a compromise with evil.  Get used to it.\nif (!emitter.infinite) {\n  emitter.setMaxListeners(Infinity)\n  emitter.infinite = true\n}\n\nmodule.exports = function (cb, opts) {\n  assert.equal(typeof cb, 'function', 'a callback must be provided for exit handler')\n\n  if (loaded === false) {\n    load()\n  }\n\n  var ev = 'exit'\n  if (opts && opts.alwaysLast) {\n    ev = 'afterexit'\n  }\n\n  var remove = function () {\n    emitter.removeListener(ev, cb)\n    if (emitter.listeners('exit').length === 0 &&\n        emitter.listeners('afterexit').length === 0) {\n      unload()\n    }\n  }\n  emitter.on(ev, cb)\n\n  return remove\n}\n\nmodule.exports.unload = unload\nfunction unload () {\n  if (!loaded) {\n    return\n  }\n  loaded = false\n\n  signals.forEach(function (sig) {\n    try {\n      process.removeListener(sig, sigListeners[sig])\n    } catch (er) {}\n  })\n  process.emit = originalProcessEmit\n  process.reallyExit = originalProcessReallyExit\n  emitter.count -= 1\n}\n\nfunction emit (event, code, signal) {\n  if (emitter.emitted[event]) {\n    return\n  }\n  emitter.emitted[event] = true\n  emitter.emit(event, code, signal)\n}\n\n// { <signal>: <listener fn>, ... }\nvar sigListeners = {}\nsignals.forEach(function (sig) {\n  sigListeners[sig] = function listener () {\n    // If there are no other listeners, an exit is coming!\n    // Simplest way: remove us and then re-send the signal.\n    // We know that this will kill the process, so we can\n    // safely emit now.\n    var listeners = process.listeners(sig)\n    if (listeners.length === emitter.count) {\n      unload()\n      emit('exit', null, sig)\n      /* istanbul ignore next */\n      emit('afterexit', null, sig)\n      /* istanbul ignore next */\n      if (isWin && sig === 'SIGHUP') {\n        // \"SIGHUP\" throws an `ENOSYS` error on Windows,\n        // so use a supported signal instead\n        sig = 'SIGINT'\n      }\n      process.kill(process.pid, sig)\n    }\n  }\n})\n\nmodule.exports.signals = function () {\n  return signals\n}\n\nmodule.exports.load = load\n\nvar loaded = false\n\nfunction load () {\n  if (loaded) {\n    return\n  }\n  loaded = true\n\n  // This is the number of onSignalExit's that are in play.\n  // It's important so that we can count the correct number of\n  // listeners on signals, and don't wait for the other one to\n  // handle it instead of us.\n  emitter.count += 1\n\n  signals = signals.filter(function (sig) {\n    try {\n      process.on(sig, sigListeners[sig])\n      return true\n    } catch (er) {\n      return false\n    }\n  })\n\n  process.emit = processEmit\n  process.reallyExit = processReallyExit\n}\n\nvar originalProcessReallyExit = process.reallyExit\nfunction processReallyExit (code) {\n  process.exitCode = code || 0\n  emit('exit', process.exitCode, null)\n  /* istanbul ignore next */\n  emit('afterexit', process.exitCode, null)\n  /* istanbul ignore next */\n  originalProcessReallyExit.call(process, process.exitCode)\n}\n\nvar originalProcessEmit = process.emit\nfunction processEmit (ev, arg) {\n  if (ev === 'exit') {\n    if (arg !== undefined) {\n      process.exitCode = arg\n    }\n    var ret = originalProcessEmit.apply(this, arguments)\n    emit('exit', process.exitCode, null)\n    /* istanbul ignore next */\n    emit('afterexit', process.exitCode, null)\n    return ret\n  } else {\n    return originalProcessEmit.apply(this, arguments)\n  }\n}\n"},"lineCount":165}},"error":null,"hash":"270ad6d45ba330b46e6d9a7addea2f55","cacheData":{"env":{}}}