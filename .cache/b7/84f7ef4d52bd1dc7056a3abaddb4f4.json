{"id":"node_modules/path-dirname/index.js","dependencies":[{"name":"C:\\Users\\pooya\\Desktop\\poomap\\package.json","includedInParent":true,"mtime":1594932269761},{"name":"C:\\Users\\pooya\\Desktop\\poomap\\node_modules\\path-dirname\\package.json","includedInParent":true,"mtime":1594932269048},{"name":"path","loc":{"line":3,"column":19},"parent":"C:\\Users\\pooya\\Desktop\\poomap\\node_modules\\path-dirname\\index.js","resolved":"C:\\Users\\pooya\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\path-browserify\\index.js"},{"name":"util","loc":{"line":4,"column":22},"parent":"C:\\Users\\pooya\\Desktop\\poomap\\node_modules\\path-dirname\\index.js","resolved":"C:\\Users\\pooya\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\util\\util.js"},{"name":"process","parent":"C:\\Users\\pooya\\Desktop\\poomap\\node_modules\\path-dirname\\index.js","resolved":"C:\\Users\\pooya\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\process\\browser.js"}],"generated":{"js":"var process = require(\"process\");\n'use strict';\n\nvar path = require('path');\nvar inspect = require('util').inspect;\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + inspect(path));\n  }\n}\n\nfunction posix(path) {\n  assertPath(path);\n  if (path.length === 0)\n    return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = (code === 47/*/*/);\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47/*/*/) {\n      if (!matchedSlash) {\n        end = i;\n        break;\n      }\n    } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1)\n    return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1)\n    return '//';\n  return path.slice(0, end);\n}\n\nfunction win32(path) {\n  assertPath(path);\n  var len = path.length;\n  if (len === 0)\n    return '.';\n  var rootEnd = -1;\n  var end = -1;\n  var matchedSlash = true;\n  var offset = 0;\n  var code = path.charCodeAt(0);\n\n  // Try to match a root\n  if (len > 1) {\n    if (code === 47/*/*/ || code === 92/*\\*/) {\n      // Possible UNC root\n\n      rootEnd = offset = 1;\n\n      code = path.charCodeAt(1);\n      if (code === 47/*/*/ || code === 92/*\\*/) {\n        // Matched double path separator at beginning\n        var j = 2;\n        var last = j;\n        // Match 1 or more non-path separators\n        for (; j < len; ++j) {\n          code = path.charCodeAt(j);\n          if (code === 47/*/*/ || code === 92/*\\*/)\n            break;\n        }\n        if (j < len && j !== last) {\n          // Matched!\n          last = j;\n          // Match 1 or more path separators\n          for (; j < len; ++j) {\n            code = path.charCodeAt(j);\n            if (code !== 47/*/*/ && code !== 92/*\\*/)\n              break;\n          }\n          if (j < len && j !== last) {\n            // Matched!\n            last = j;\n            // Match 1 or more non-path separators\n            for (; j < len; ++j) {\n              code = path.charCodeAt(j);\n              if (code === 47/*/*/ || code === 92/*\\*/)\n                break;\n            }\n            if (j === len) {\n              // We matched a UNC root only\n              return path;\n            }\n            if (j !== last) {\n              // We matched a UNC root with leftovers\n\n              // Offset by 1 to include the separator after the UNC root to\n              // treat it as a \"normal root\" on top of a (UNC) root\n              rootEnd = offset = j + 1;\n            }\n          }\n        }\n      }\n    } else if ((code >= 65/*A*/ && code <= 90/*Z*/) ||\n               (code >= 97/*a*/ && code <= 122/*z*/)) {\n      // Possible device root\n\n      code = path.charCodeAt(1);\n      if (path.charCodeAt(1) === 58/*:*/) {\n        rootEnd = offset = 2;\n        if (len > 2) {\n          code = path.charCodeAt(2);\n          if (code === 47/*/*/ || code === 92/*\\*/)\n            rootEnd = offset = 3;\n        }\n      }\n    }\n  } else if (code === 47/*/*/ || code === 92/*\\*/) {\n    return path[0];\n  }\n\n  for (var i = len - 1; i >= offset; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47/*/*/ || code === 92/*\\*/) {\n      if (!matchedSlash) {\n        end = i;\n        break;\n      }\n    } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) {\n    if (rootEnd === -1)\n      return '.';\n    else\n      end = rootEnd;\n  }\n  return path.slice(0, end);\n}\n\nmodule.exports = process.platform === 'win32' ? win32 : posix;\nmodule.exports.posix = posix;\nmodule.exports.win32 = win32;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/path-dirname/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/path-dirname/index.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}}],"sources":{"node_modules/path-dirname/index.js":"'use strict';\n\nvar path = require('path');\nvar inspect = require('util').inspect;\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + inspect(path));\n  }\n}\n\nfunction posix(path) {\n  assertPath(path);\n  if (path.length === 0)\n    return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = (code === 47/*/*/);\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47/*/*/) {\n      if (!matchedSlash) {\n        end = i;\n        break;\n      }\n    } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1)\n    return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1)\n    return '//';\n  return path.slice(0, end);\n}\n\nfunction win32(path) {\n  assertPath(path);\n  var len = path.length;\n  if (len === 0)\n    return '.';\n  var rootEnd = -1;\n  var end = -1;\n  var matchedSlash = true;\n  var offset = 0;\n  var code = path.charCodeAt(0);\n\n  // Try to match a root\n  if (len > 1) {\n    if (code === 47/*/*/ || code === 92/*\\*/) {\n      // Possible UNC root\n\n      rootEnd = offset = 1;\n\n      code = path.charCodeAt(1);\n      if (code === 47/*/*/ || code === 92/*\\*/) {\n        // Matched double path separator at beginning\n        var j = 2;\n        var last = j;\n        // Match 1 or more non-path separators\n        for (; j < len; ++j) {\n          code = path.charCodeAt(j);\n          if (code === 47/*/*/ || code === 92/*\\*/)\n            break;\n        }\n        if (j < len && j !== last) {\n          // Matched!\n          last = j;\n          // Match 1 or more path separators\n          for (; j < len; ++j) {\n            code = path.charCodeAt(j);\n            if (code !== 47/*/*/ && code !== 92/*\\*/)\n              break;\n          }\n          if (j < len && j !== last) {\n            // Matched!\n            last = j;\n            // Match 1 or more non-path separators\n            for (; j < len; ++j) {\n              code = path.charCodeAt(j);\n              if (code === 47/*/*/ || code === 92/*\\*/)\n                break;\n            }\n            if (j === len) {\n              // We matched a UNC root only\n              return path;\n            }\n            if (j !== last) {\n              // We matched a UNC root with leftovers\n\n              // Offset by 1 to include the separator after the UNC root to\n              // treat it as a \"normal root\" on top of a (UNC) root\n              rootEnd = offset = j + 1;\n            }\n          }\n        }\n      }\n    } else if ((code >= 65/*A*/ && code <= 90/*Z*/) ||\n               (code >= 97/*a*/ && code <= 122/*z*/)) {\n      // Possible device root\n\n      code = path.charCodeAt(1);\n      if (path.charCodeAt(1) === 58/*:*/) {\n        rootEnd = offset = 2;\n        if (len > 2) {\n          code = path.charCodeAt(2);\n          if (code === 47/*/*/ || code === 92/*\\*/)\n            rootEnd = offset = 3;\n        }\n      }\n    }\n  } else if (code === 47/*/*/ || code === 92/*\\*/) {\n    return path[0];\n  }\n\n  for (var i = len - 1; i >= offset; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47/*/*/ || code === 92/*\\*/) {\n      if (!matchedSlash) {\n        end = i;\n        break;\n      }\n    } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) {\n    if (rootEnd === -1)\n      return '.';\n    else\n      end = rootEnd;\n  }\n  return path.slice(0, end);\n}\n\nmodule.exports = process.platform === 'win32' ? win32 : posix;\nmodule.exports.posix = posix;\nmodule.exports.win32 = win32;\n"},"lineCount":145}},"error":null,"hash":"852f1aa32ffbae63257c5d84a50edd60","cacheData":{"env":{}}}