{"id":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","dependencies":[{"name":"C:\\Users\\pooya\\Desktop\\poomap\\package.json","includedInParent":true,"mtime":1594932269761},{"name":"C:\\Users\\pooya\\Desktop\\poomap\\node_modules\\@mrmlnc\\readdir-enhanced\\package.json","includedInParent":true,"mtime":1594932268548}],"generated":{"js":"'use strict';\n\nmodule.exports = syncForEach;\n/**\n * A facade that allows {@link Array.forEach} to be called as though it were asynchronous.\n *\n * @param {array} array - The array to iterate over\n * @param {function} iterator - The function to call for each item in the array\n * @param {function} done - The function to call when all iterators have completed\n */\n\nfunction syncForEach(array, iterator, done) {\n  array.forEach(item => {\n    iterator(item, () => {// Note: No error-handling here because this is currently only ever called\n      // by DirectoryReader, which never passes an `error` parameter to the callback.\n      // Instead, DirectoryReader emits an \"error\" event if an error occurs.\n    });\n  });\n  done();\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":1,"column":0}},{"name":"module","generated":{"line":3,"column":0},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":3,"column":0}},{"generated":{"line":3,"column":6},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":3,"column":6}},{"name":"exports","generated":{"line":3,"column":7},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":3,"column":7}},{"generated":{"line":3,"column":14},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":3,"column":0}},{"name":"syncForEach","generated":{"line":3,"column":17},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":3,"column":17}},{"generated":{"line":3,"column":28},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":3,"column":0}},{"generated":{"line":4,"column":0},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":5,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":12,"column":0}},{"name":"syncForEach","generated":{"line":12,"column":9},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":12,"column":9}},{"generated":{"line":12,"column":20},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":12,"column":0}},{"name":"array","generated":{"line":12,"column":21},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":12,"column":22}},{"generated":{"line":12,"column":26},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":12,"column":0}},{"name":"iterator","generated":{"line":12,"column":28},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":12,"column":29}},{"generated":{"line":12,"column":36},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":12,"column":0}},{"name":"done","generated":{"line":12,"column":38},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":12,"column":39}},{"generated":{"line":12,"column":42},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":12,"column":0}},{"generated":{"line":12,"column":44},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":12,"column":45}},{"name":"array","generated":{"line":13,"column":0},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":13,"column":2}},{"name":"array","generated":{"line":13,"column":2},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":13,"column":2}},{"generated":{"line":13,"column":7},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":13,"column":7}},{"name":"forEach","generated":{"line":13,"column":8},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":13,"column":8}},{"generated":{"line":13,"column":15},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":13,"column":2}},{"name":"item","generated":{"line":13,"column":16},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":13,"column":16}},{"generated":{"line":13,"column":20},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":13,"column":20}},{"generated":{"line":13,"column":24},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":13,"column":24}},{"name":"iterator","generated":{"line":14,"column":0},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":14,"column":4}},{"name":"iterator","generated":{"line":14,"column":4},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":14,"column":4}},{"generated":{"line":14,"column":12},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":14,"column":12}},{"name":"item","generated":{"line":14,"column":13},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":14,"column":13}},{"generated":{"line":14,"column":17},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":14,"column":12}},{"generated":{"line":14,"column":19},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":14,"column":19}},{"generated":{"line":14,"column":25},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":14,"column":25}},{"generated":{"line":14,"column":26},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":15,"column":6}},{"generated":{"line":15,"column":0},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":16,"column":6}},{"generated":{"line":16,"column":0},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":17,"column":6}},{"generated":{"line":17,"column":0},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":18,"column":5}},{"generated":{"line":17,"column":5},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":14,"column":12}},{"generated":{"line":17,"column":6},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":14,"column":4}},{"generated":{"line":18,"column":0},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":19,"column":3}},{"generated":{"line":18,"column":3},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":13,"column":2}},{"name":"done","generated":{"line":19,"column":0},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":21,"column":2}},{"name":"done","generated":{"line":19,"column":2},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":21,"column":2}},{"generated":{"line":19,"column":6},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":21,"column":6}},{"generated":{"line":20,"column":0},"source":"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","original":{"line":22,"column":1}}],"sources":{"node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js":"'use strict';\n\nmodule.exports = syncForEach;\n\n/**\n * A facade that allows {@link Array.forEach} to be called as though it were asynchronous.\n *\n * @param {array} array - The array to iterate over\n * @param {function} iterator - The function to call for each item in the array\n * @param {function} done - The function to call when all iterators have completed\n */\nfunction syncForEach (array, iterator, done) {\n  array.forEach(item => {\n    iterator(item, () => {\n      // Note: No error-handling here because this is currently only ever called\n      // by DirectoryReader, which never passes an `error` parameter to the callback.\n      // Instead, DirectoryReader emits an \"error\" event if an error occurs.\n    });\n  });\n\n  done();\n}\n"},"lineCount":null}},"error":null,"hash":"ab5821bba4705498dbc3bf77e80e9cc2","cacheData":{"env":{}}}